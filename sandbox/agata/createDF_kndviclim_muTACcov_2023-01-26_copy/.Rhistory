for (rdata_file in file_list){
load(rdata_file)
print(head(df_stats))
print(names(df_stats))
print(substr(basename(rdata_file), 4, -14))
#names(y) <- paste(names(y), gsub(".RData", "", basename(file_list[which(y == data_list)])), sep = "_")
}
# Set working directory
setwd("/eos/jeodpp/data/projects/FOREST-RESILIENCE/GIT-FOREST-RESILIENCE/FOREST-RESILIENCE/sandbox/agata/createDF_kndviclim_muTACcov_2023-01-26_copy/")
# Load all the RData objects
file_list <- list.files(pattern = "*.RData")
# # Load all the RData objects assigning new names to the objects
# for (rdata_file in file_list) {
#   obj_name <- sub(".RData$", "", basename(rdata_file))
#   assign(obj_name, load(rdata_file))
# }
print(file_list)
for (rdata_file in file_list){
load(rdata_file)
print(head(df_stats))
print(names(df_stats))
print(substr(basename(rdata_file), 4, -7))
#names(y) <- paste(names(y), gsub(".RData", "", basename(file_list[which(y == data_list)])), sep = "_")
}
# Set working directory
setwd("/eos/jeodpp/data/projects/FOREST-RESILIENCE/GIT-FOREST-RESILIENCE/FOREST-RESILIENCE/sandbox/agata/createDF_kndviclim_muTACcov_2023-01-26_copy/")
# Load all the RData objects
file_list <- list.files(pattern = "*.RData")
# # Load all the RData objects assigning new names to the objects
# for (rdata_file in file_list) {
#   obj_name <- sub(".RData$", "", basename(rdata_file))
#   assign(obj_name, load(rdata_file))
# }
print(file_list)
for (rdata_file in file_list){
load(rdata_file)
print(head(df_stats))
print(names(df_stats))
print(substr(basename(rdata_file), -7))
#names(y) <- paste(names(y), gsub(".RData", "", basename(file_list[which(y == data_list)])), sep = "_")
}
# Set working directory
setwd("/eos/jeodpp/data/projects/FOREST-RESILIENCE/GIT-FOREST-RESILIENCE/FOREST-RESILIENCE/sandbox/agata/createDF_kndviclim_muTACcov_2023-01-26_copy/")
# Load all the RData objects
file_list <- list.files(pattern = "*.RData")
# # Load all the RData objects assigning new names to the objects
# for (rdata_file in file_list) {
#   obj_name <- sub(".RData$", "", basename(rdata_file))
#   assign(obj_name, load(rdata_file))
# }
print(file_list)
for (rdata_file in file_list){
load(rdata_file)
print(head(df_stats))
print(names(df_stats))
print(rightsubstr(basename(rdata_file), 4, -11))
#names(y) <- paste(names(y), gsub(".RData", "", basename(file_list[which(y == data_list)])), sep = "_")
}
# Set working directory
setwd("/eos/jeodpp/data/projects/FOREST-RESILIENCE/GIT-FOREST-RESILIENCE/FOREST-RESILIENCE/sandbox/agata/createDF_kndviclim_muTACcov_2023-01-26_copy/")
# Load all the RData objects
file_list <- list.files(pattern = "*.RData")
# # Load all the RData objects assigning new names to the objects
# for (rdata_file in file_list) {
#   obj_name <- sub(".RData$", "", basename(rdata_file))
#   assign(obj_name, load(rdata_file))
# }
print(file_list)
for (rdata_file in file_list){
load(rdata_file)
print(head(df_stats))
print(names(df_stats))
print(substr(basename(rdata_file), 4, -11))
#names(y) <- paste(names(y), gsub(".RData", "", basename(file_list[which(y == data_list)])), sep = "_")
}
# Set working directory
setwd("/eos/jeodpp/data/projects/FOREST-RESILIENCE/GIT-FOREST-RESILIENCE/FOREST-RESILIENCE/sandbox/agata/createDF_kndviclim_muTACcov_2023-01-26_copy/")
# Load all the RData objects
file_list <- list.files(pattern = "*.RData")
# # Load all the RData objects assigning new names to the objects
# for (rdata_file in file_list) {
#   obj_name <- sub(".RData$", "", basename(rdata_file))
#   assign(obj_name, load(rdata_file))
# }
print(file_list)
for (rdata_file in file_list){
load(rdata_file)
print(head(df_stats))
print(names(df_stats))
print(substr(basename(rdata_file), -13, -11))
#names(y) <- paste(names(y), gsub(".RData", "", basename(file_list[which(y == data_list)])), sep = "_")
}
file <- "df_VPD_muTACcov.RData"
basename(file)
basename<-basename(file)
basename
substr(basename, -13, -11)
substr(basename, 4, 17)
substr(basename, 4, -11)
str_sub(basename, 4, -11)
library(stringr)
str_sub(basename, 4, -11)
substr(basename, 4, -10)
str_sub(basename, 4, -14)
str_sub(basename, 4, -16)
library(stringr)
# Set working directory
setwd("/eos/jeodpp/data/projects/FOREST-RESILIENCE/GIT-FOREST-RESILIENCE/FOREST-RESILIENCE/sandbox/agata/createDF_kndviclim_muTACcov_2023-01-26_copy/")
# Load all the RData objects
file_list <- list.files(pattern = "*.RData")
# # Load all the RData objects assigning new names to the objects
# for (rdata_file in file_list) {
#   obj_name <- sub(".RData$", "", basename(rdata_file))
#   assign(obj_name, load(rdata_file))
# }
print(file_list)
for (rdata_file in file_list){
load(rdata_file)
print(head(df_stats))
print(names(df_stats))
print(str_sub(basename(rdata_file), 4, -16))
#names(y) <- paste(names(y), gsub(".RData", "", basename(file_list[which(y == data_list)])), sep = "_")
}
colnames(df_stats)
colnames(df_stats)[2:7]
colnames(df_stats)[3:7]
colnames(df_stats[2:8])
paste(colnames(df_stats), var_name, sep="_")
var_name<-"VPD"
paste(colnames(df_stats), var_name, sep="_")
paste(var_name, colnames(df_stats), sep="_")
var_name <- "VPD"
var)name
var)name
var_name
var_name != "kndvi"
library(stringr)
# Set working directory
setwd("/eos/jeodpp/data/projects/FOREST-RESILIENCE/GIT-FOREST-RESILIENCE/FOREST-RESILIENCE/sandbox/agata/createDF_kndviclim_muTACcov_2023-01-26_copy/")
# Load all the RData objects
file_list <- list.files(pattern = "*.RData")
# Inspect list
print(file_list)
# # Load all the RData objects assigning new names to the objects
# for (rdata_file in file_list) {
#   obj_name <- sub(".RData$", "", basename(rdata_file))
#   assign(obj_name, load(rdata_file))
# }
# Load kndvi df
df_kndvi <- load("df_kndvi_muTACcov.RData")
# Add variables prefix to df columns
colnames(df_kndvi)[3:8] <- paste(colnames(df_kndvi), "kndvi", sep="_")
library(stringr)
# Set working directory
setwd("/eos/jeodpp/data/projects/FOREST-RESILIENCE/GIT-FOREST-RESILIENCE/FOREST-RESILIENCE/sandbox/agata/createDF_kndviclim_muTACcov_2023-01-26_copy/")
# Load all the RData objects
file_list <- list.files(pattern = "*.RData")
# Inspect list
print(file_list)
# # Load all the RData objects assigning new names to the objects
# for (rdata_file in file_list) {
#   obj_name <- sub(".RData$", "", basename(rdata_file))
#   assign(obj_name, load(rdata_file))
# }
df_kndvi <- load("df_kndvi_muTACcov.RData")
colnames(df_kndvi)
colname(df_stats)
colnames(df_stats)
load("df_kndvi_muTACcov.RData")
df_kndvi <- df_stats
# Add variables prefix to df columns
colnames(df_kndvi)[3:8] <- paste(colnames(df_kndvi), "kndvi", sep="_")
print(colnames(df_kndvi))
colnames(df_kndvi)[3:8] <- paste(colnames(df_kndvi), "kndvi", sep="_")
# Add variables prefix to df columns
colnames(df_kndvi)[3:8] <- paste(colnames(df_kndvi)[3:8], "kndvi", sep="_")
print(colnames(df_kndvi))
load("df_kndvi_muTACcov.RData")
df_kndvi <- df_stats
print(colnames(df_kndvi))
colnames(df_kndvi)[3:8] <- paste(colnames(df_kndvi)[3:8], "kndvi", sep="_")
print(colnames(df_kndvi))
# Loop through the RData objects, load them, change object name,
#rename colunm names adding the variable as a prefix and join with kndvi RData object
for (rdata_file in file_list){
var_name <- str_sub(basename(rdata_file), 4, -16)
print(var_name)
if (var_name != "kndvi"){
load(rdata_file)
print(head(df_stats))
print(colnames(df_stats))
colnames(df_stats)[3:8] <- paste(colnames(df_stats)[3:8], var_name, sep="_")
df_kNDVI <- full_join(df_kndvi, df_stats)
}
}
library(stringr)
# Set working directory
setwd("/eos/jeodpp/data/projects/FOREST-RESILIENCE/GIT-FOREST-RESILIENCE/FOREST-RESILIENCE/sandbox/agata/createDF_kndviclim_muTACcov_2023-01-26_copy/")
# Load all the RData objects
file_list <- list.files(pattern = "*.RData")
# Inspect list
print(file_list)
# # Load all the RData objects assigning new names to the objects
# for (rdata_file in file_list) {
#   obj_name <- sub(".RData$", "", basename(rdata_file))
#   assign(obj_name, load(rdata_file))
# }
# Load kndvi df
load("df_kndvi_muTACcov.RData")
df_kndvi <- df_stats
# Add variables prefix to df columns
print(colnames(df_kndvi))
colnames(df_kndvi)[3:8] <- paste(colnames(df_kndvi)[3:8], "kndvi", sep="_")
print(colnames(df_kndvi))
# Loop through the RData objects, load them, change object name,
#rename colunm names adding the variable as a prefix and join with kndvi RData object
for (rdata_file in file_list){
var_name <- str_sub(basename(rdata_file), 4, -16)
print(var_name)
if (var_name != "kndvi"){
load(rdata_file)
#print(head(df_stats))
print(colnames(df_stats))
colnames(df_stats)[3:8] <- paste(colnames(df_stats)[3:8], var_name, sep="_")
df_kNDVI <- full_join(df_kndvi, df_stats)
}
}
library(stringr)
library(dplyr)
# Set working directory
setwd("/eos/jeodpp/data/projects/FOREST-RESILIENCE/GIT-FOREST-RESILIENCE/FOREST-RESILIENCE/sandbox/agata/createDF_kndviclim_muTACcov_2023-01-26_copy/")
# Load all the RData objects
file_list <- list.files(pattern = "*.RData")
# Inspect list
print(file_list)
# # Load all the RData objects assigning new names to the objects
# for (rdata_file in file_list) {
#   obj_name <- sub(".RData$", "", basename(rdata_file))
#   assign(obj_name, load(rdata_file))
# }
# Load kndvi df
load("df_kndvi_muTACcov.RData")
df_kndvi <- df_stats
# Add variables prefix to df columns
print(colnames(df_kndvi))
colnames(df_kndvi)[3:8] <- paste(colnames(df_kndvi)[3:8], "kndvi", sep="_")
print(colnames(df_kndvi))
# Loop through the RData objects, load them, change object name,
#rename colunm names adding the variable as a prefix and join with kndvi RData object
for (rdata_file in file_list){
var_name <- str_sub(basename(rdata_file), 4, -16)
print(var_name)
if (var_name != "kndvi"){
load(rdata_file)
#print(head(df_stats))
print(colnames(df_stats))
colnames(df_stats)[3:8] <- paste(colnames(df_stats)[3:8], var_name, sep="_")
print(colnames(df_stats))
df_kNDVI <- full_join(df_kndvi, df_stats)
}
}
print(colnames(df_kndvi))
library(stringr)
library(dplyr)
# Set working directory
setwd("/eos/jeodpp/data/projects/FOREST-RESILIENCE/GIT-FOREST-RESILIENCE/FOREST-RESILIENCE/sandbox/agata/createDF_kndviclim_muTACcov_2023-01-26_copy/")
# Load all the RData objects
file_list <- list.files(pattern = "*.RData")
# Inspect list
print(file_list)
# # Load all the RData objects assigning new names to the objects
# for (rdata_file in file_list) {
#   obj_name <- sub(".RData$", "", basename(rdata_file))
#   assign(obj_name, load(rdata_file))
# }
# Load kndvi df
load("df_kndvi_muTACcov.RData")
df_kndvi <- df_stats
# Add variables prefix to df columns
print(colnames(df_kndvi))
colnames(df_kndvi)[3:8] <- paste(colnames(df_kndvi)[3:8], "kndvi", sep="_")
print(colnames(df_kndvi))
# Loop through the RData objects, load them, change object name,
#rename colunm names adding the variable as a prefix and join with kndvi RData object
for (rdata_file in file_list){
var_name <- str_sub(basename(rdata_file), 4, -16)
print(var_name)
if (var_name != "kndvi"){
load(rdata_file)
#print(head(df_stats))
print(colnames(df_stats))
colnames(df_stats)[3:8] <- paste(colnames(df_stats)[3:8], var_name, sep="_")
print(colnames(df_stats))
df_kndvi <- full_join(df_kndvi, df_stats)
}
}
print(colnames(df_kndvi))
library(stringr)
library(dplyr)
# Set working directory
setwd("/eos/jeodpp/data/projects/FOREST-RESILIENCE/GIT-FOREST-RESILIENCE/FOREST-RESILIENCE/sandbox/agata/createDF_kndviclim_muTACcov_2023-01-26_copy/")
# Load all the RData objects
file_list <- list.files(pattern = "*.RData")
# Inspect list
print(file_list)
# Load kndvi df
load("df_kndvi_muTACcov.RData")
df_kndvi <- df_stats
# Add variables prefix to df columns
print(colnames(df_kndvi))
colnames(df_kndvi)[3:8] <- paste(colnames(df_kndvi)[3:8], "kndvi", sep="_")
print(colnames(df_kndvi))
# Loop through the RData objects, load them, change object name,
#rename colunm names adding the variable as a prefix and join with kndvi RData object
for (rdata_file in file_list){
var_name <- str_sub(basename(rdata_file), 4, -16)
print(var_name)
if (var_name != "kndvi"){
load(rdata_file)
#print(head(df_stats))
print(colnames(df_stats))
colnames(df_stats)[3:8] <- paste(colnames(df_stats)[3:8], var_name, sep="_")
print(colnames(df_stats))
df_kndvi <- full_join(df_kndvi, df_stats)
}
}
# Inspect results
print(colnames(df_kndvi))
print(head(df_kndvi))
# Save merged output
save(df_kndvi, file=paste0('df_all_muTACcov.RData'))
library(stringr)
library(dplyr)
# Set working directory
setwd("/eos/jeodpp/data/projects/FOREST-RESILIENCE/GIT-FOREST-RESILIENCE/FOREST-RESILIENCE/sandbox/agata/createDF_kndviclim_muTACcov_2023-01-26_copy/")
# Load all the RData objects
file_list <- list.files(pattern = "*.RData")
# Inspect list
print(file_list)
# Load kndvi df
load("df_kndvi_muTACcov.RData")
df_kndvi <- df_stats
# Add variables prefix to df columns
print(colnames(df_kndvi))
colnames(df_kndvi)[3:8] <- paste(colnames(df_kndvi)[3:8], "kndvi", sep="_")
print(colnames(df_kndvi))
# Loop through the RData objects, load them, change object name,
#rename colunm names adding the variable as a prefix and join with kndvi RData object
for (rdata_file in file_list){
var_name <- str_sub(basename(rdata_file), 4, -16)
print(var_name)
if (var_name != "kndvi"){
load(rdata_file)
print(head(df_stats))
print(colnames(df_stats))
colnames(df_stats)[3:8] <- paste(colnames(df_stats)[3:8], var_name, sep="_")
print(colnames(df_stats))
# Join (https://www.rdocumentation.org/packages/dplyr/versions/0.7.8/topics/join)
df_kndvi <- full_join(df_kndvi, df_stats)
}
}
# Inspect results
print(colnames(df_kndvi))
print(head(df_kndvi))
# Save merged output
save(df_kndvi, file=paste0("df_all_muTACcov.RData"))
library(stringr)
library(dplyr)
# Set working directory
setwd("/eos/jeodpp/data/projects/FOREST-RESILIENCE/GIT-FOREST-RESILIENCE/FOREST-RESILIENCE/sandbox/agata/createDF_kndviclim_muTACcov_2023-01-26_copy/")
# Load all the RData objects
file_list <- list.files(pattern = "*.RData")
# Inspect list
print(file_list)
# Load kndvi df
load("df_kndvi_muTACcov.RData")
df_kndvi <- df_stats
# Add variables prefix to df columns
print(head(df_kndvi))
print(colnames(df_kndvi))
colnames(df_kndvi)[3:8] <- paste(colnames(df_kndvi)[3:8], "kndvi", sep="_")
print(colnames(df_kndvi))
# Loop through the RData objects, load them, change object name,
#rename colunm names adding the variable as a prefix and join with kndvi RData object
for (rdata_file in file_list){
var_name <- str_sub(basename(rdata_file), 4, -16)
print(var_name)
if (var_name != "kndvi"){
load(rdata_file)
print(head(df_stats))
print(colnames(df_stats))
colnames(df_stats)[3:8] <- paste(colnames(df_stats)[3:8], var_name, sep="_")
print(colnames(df_stats))
# Join (https://www.rdocumentation.org/packages/dplyr/versions/0.7.8/topics/join)
df_kndvi <- full_join(df_kndvi, df_stats)
}
}
# Inspect results
print(colnames(df_kndvi))
print(head(df_kndvi))
# Save merged output
save(df_kndvi, file=paste0("df_all_muTACcov.RData"))
tail(df_kndvi)
# Import relevant libraries
library(dplyr)
library(randomForest)
library(ggplot2)
# Read the dataframe containing the response and predictor variables
load("/eos/jeodpp/data/projects/FOREST-RESILIENCE/GIT-FOREST-RESILIENCE/FOREST-RESILIENCE/sandbox/agata/createDF_kndviclim_muTACcov_2023-01-26_copy/df_all_muTACcov.RData")
variables <- df_kndvi
colnames(variables)
# Explore the dataframe
print(head(variables))
print(colnames(variables))
print(summary(variables))
# ########################################################
# Title         : random_forest.R
# Description   : Read dataframes with response and predictor variables, fit a RF regression model,
#                 calculate variable importance metrics and plot variable importance metics and PDPs
# Aims          : Fit a random forest regression model to data contained in a dataframe
# Inputs	      : Dataframe
# Outputs	      : Tables and plots
# Options	      :
# Date          : 29/01/2023
# Version       : 1.1
# Authors       : Agata Elia & Mark Pickering
# Maintainer    : Agata Elia & Mark Pickering
# Notes		      :
# Example use   :
# ########################################################
# Import relevant libraries
library(dplyr)
library(randomForest)
library(ggplot2)
# Read the dataframe containing the response and predictor variables
load("/eos/jeodpp/data/projects/FOREST-RESILIENCE/GIT-FOREST-RESILIENCE/FOREST-RESILIENCE/sandbox/agata/createDF_kndviclim_muTACcov_2023-01-26_copy/df_all_muTACcov.RData")
variables <- df_kndvi
# Remove na?
variables <- na.omit(variables)
# Explore the dataframe
print(head(variables))
print(colnames(variables))
print(summary(variables))
# Define if going for a subset of the data or for the whole data for the model (here going for half)
train <- sample(1:nrow(variables), nrwo(variables) /2)
# Define if going for a subset of the data or for the whole data for the model (here going for half)
train <- sample(1:nrow(variables), nrow(variables) /2)
# Define parameters of the random forest
ntree <- 100
mtry <-sqrt(ncol(variables))
# Train the random forest model using as response variable the kNDVI TAC (https://www.rdocumentation.org/packages/randomForest/versions/4.7-1.1/topics/randomForest)
rf_model <- randomForest(tac_resid_kndvi ~ . - n_var_kndvi - mu_var_kndvi - sd_var_kndvi - cv_var_kndvi - cv_calc_var_kndvi, data = variables, subset = train, ntree = ntree, mtry = mtry, importance = TRUE)
# Explore results of the random forest
print(summary(rf_model))
# Calculate variable importance (https://www.rdocumentation.org/packages/LaplacesDemon/versions/16.1.6/topics/Importance)
var_imp <- importance(rf_model)
print(var_imp)
var_imp_df <- data.frame(variable = rownames(var_imp), importance = var_imp[, 1])
imp_var_sorted <- rownames(var_imp)[order(var_imp[, 1], decreasing=TRUE)]
# Plot the variable importance sorted by importance
ggplot(var_imp, aes(x = reorder(variable, importance), y = importance)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Variable Importances")
imp_var_sorted
var_imp_df
# Plot the variable importance sorted by importance
ggplot(var_imp_df, aes(x = reorder(variable, importance), y = importance)) +
geom_bar(stat = "identity") +
coord_flip() +
ggtitle("Variable Importances")
# Calculate and plot partial dependence plots for all the variables (https://www.rdocumentation.org/packages/randomForest/versions/4.7-1.1/topics/partialPlot)
op <- par(mfrow=c(2, 3)) #???
for (i in seq_along(imp_var_sorted)) {
partialPlot(rf_model, variables, imp_var_sorted[i], xlab=imp_var_sorted[i],
main=paste("Partial Dependence on", imp_var_sorted[i]),
ylim=c(30, 70))
}
for (i in seq_along(imp_var_sorted)) {
partialPlot(rf_model, variables, imp_var_sorted[i], xlab=imp_var_sorted[i],
main=paste("Partial Dependence on", imp_var_sorted[i]),
ylim=c(30, 70))
}
# Calculate and plot partial dependence plots for all the variables (https://www.rdocumentation.org/packages/randomForest/versions/4.7-1.1/topics/partialPlot)
op <- par(mfrow=c(2, 3)) #???
for (i in seq_along(imp_var_sorted)) {
partialPlot(rf_model, variables, unlist(imp_var_sorted[i]), xlab=imp_var_sorted[i],
main=paste("Partial Dependence on", imp_var_sorted[i]),
ylim=c(30, 70))
}
# Calculate and plot partial dependence plots for all the variables (https://www.rdocumentation.org/packages/randomForest/versions/4.7-1.1/topics/partialPlot)
op <- par(mfrow=c(2, 3)) #???
for (i in seq_along(imp_var_sorted)) {
partialPlot(rf_model, variables, data.frame(imp_var_sorted[i]), xlab=imp_var_sorted[i],
main=paste("Partial Dependence on", imp_var_sorted[i]),
ylim=c(30, 70))
}
# Calculate and plot partial dependence plots for all the variables (https://www.rdocumentation.org/packages/randomForest/versions/4.7-1.1/topics/partialPlot)
op <- par(mfrow=c(2, 3)) #???
for (i in seq_along(imp_var_sorted)) {
partialPlot(rf_model, variables, imp_var_sorted[i], xlab=imp_var_sorted[i],
main=paste("Partial Dependence on", imp_var_sorted[i]),
ylim=c(30, 70))
}
# Calculate and plot partial dependence plots for all the variables (https://www.rdocumentation.org/packages/randomForest/versions/4.7-1.1/topics/partialPlot)
partialPlot(rf_model, variables, cv_var_spei, xlab="cv_var_spei",
main=paste("Partial Dependence on", "cv_var_spei"),
ylim=c(30, 70))
# Calculate and plot partial dependence plots for all the variables (https://www.rdocumentation.org/packages/randomForest/versions/4.7-1.1/topics/partialPlot)
partialPlot(rf_model, data.frame(variables), cv_var_spei, xlab="cv_var_spei",
main=paste("Partial Dependence on", "cv_var_spei"),
ylim=c(30, 70))
